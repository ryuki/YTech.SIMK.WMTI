<%@ Master Language="C#" AutoEventWireup="true" Inherits="System.Web.Mvc.ViewMasterPage" %>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>
        <asp:ContentPlaceHolder ID="title" runat="server">
        </asp:ContentPlaceHolder>
    </title>
    <% Html.RenderPartial("Js"); %>
  
    <script type="text/javascript">
    
        // bind save() to window.onunload
        $(window).unload(function () { layoutState.save('myLayout') }); 


        /*
        * complex.html
        *
        * This is a demonstration page for the jQuery layout widget
        *
        *	NOTE: For best code readability, view this with a fixed-space font and tabs equal to 4-chars
        */

        var outerLayout, innerLayout;

        /*
        *#######################
        *     ON PAGE LOAD
        *#######################
        */
        $(document).ready(function () {
            // create the OUTER LAYOUT
            outerLayout = $("body").layout(
             $.extend( layoutSettings_Outer, layoutState.load('myLayout') )            
            );
            $("#accordion").accordion({
                autoHeight: true,
                navigation: true,
                fillSpace: true
            });

            var path = location.pathname + location.search + location.hash;
            if (path)
                $('#accordion a[href$="' + path + '"]').parent().attr('class', 'selected');
            /*******************************
            ***  CUSTOM LAYOUT BUTTONS  ***
            *******************************
            *
            * Add SPANs to the east/west panes for customer "close" and "pin" buttons
            *
            * COULD have hard-coded span, div, button, image, or any element to use as a 'button'...
            * ... but instead am adding SPANs via script - THEN attaching the layout-events to them
            *
            * CSS will size and position the spans, as well as set the background-images
            */

            // BIND events to hard-coded buttons in the NORTH toolbar
//            outerLayout.addToggleBtn("#tbarToggleNorth", "north");
//            outerLayout.addOpenBtn("#tbarOpenSouth", "south");
//            outerLayout.addCloseBtn("#tbarCloseSouth", "south");
//            outerLayout.addPinBtn("#tbarPinWest", "west");
//            outerLayout.addPinBtn("#tbarPinEast", "east");

            // save selector strings to vars so we don't have to repeat it
            // must prefix paneClass with "body > " to target ONLY the outerLayout panes
            var westSelector = "body > .ui-layout-west"; // outer-west pane
            var eastSelector = "body > .ui-layout-east"; // outer-east pane

            // CREATE SPANs for pin-buttons - using a generic class as identifiers
            $("<span></span>").addClass("pin-button").prependTo(westSelector);
            $("<span></span>").addClass("pin-button").prependTo(eastSelector);
            // BIND events to pin-buttons to make them functional
            outerLayout.addPinBtn(westSelector + " .pin-button", "west");
            outerLayout.addPinBtn(eastSelector + " .pin-button", "east");

            // CREATE SPANs for close-buttons - using unique IDs as identifiers
            $("<span></span>").attr("id", "west-closer").prependTo(westSelector);
            $("<span></span>").attr("id", "east-closer").prependTo(eastSelector);
            // BIND layout events to close-buttons to make them functional
            outerLayout.addCloseBtn("#west-closer", "west");
            outerLayout.addCloseBtn("#east-closer", "east");



            /* Create the INNER LAYOUT - nested inside the 'center pane' of the outer layout
            * Inner Layout is create by createInnerLayout() function - on demand
            *
            innerLayout = $("div.pane-center").layout( layoutSettings_Inner );
            *
            */


            // DEMO HELPER: prevent hyperlinks from reloading page when a 'base.href' is set
            $("a").each(function () {
                var path = document.location.href;
                if (path.substr(path.length - 1) == "#") path = path.substr(0, path.length - 1);
                if (this.href.substr(this.href.length - 1) == "#") this.href = path + "#";
            });

        });


        /*
        *#######################
        * INNER LAYOUT SETTINGS
        *#######################
        *
        * These settings are set in 'list format' - no nested data-structures
        * Default settings are specified with just their name, like: fxName:"slide"
        * Pane-specific settings are prefixed with the pane name + 2-underscores: north__fxName:"none"
        */
        layoutSettings_Inner = {
            applyDefaultStyles: false // basic styling for testing & demo purposes
	, minSize: 20 // TESTING ONLY
	, spacing_closed: 14
	, north__spacing_closed: 8
	, south__spacing_closed: 8
	, north__togglerLength_closed: -1 // = 100% - so cannot 'slide open'
	, south__togglerLength_closed: -1
	, fxName: "slide" // do not confuse with "slidable" option!
	, fxSpeed_open: 1000
	, fxSpeed_close: 2500
	, fxSettings_open: { easing: "easeInQuint" }
	, fxSettings_close: { easing: "easeOutQuint" }
	, north__fxName: "none"
	, south__fxName: "drop"
	, south__fxSpeed_open: 500
	, south__fxSpeed_close: 1000
            //,	initClosed:						true
	, center__minWidth: 200
	, center__minHeight: 200
        };


        /*
        *#######################
        * OUTER LAYOUT SETTINGS
        *#######################
        *
        * This configuration illustrates how extensively the layout can be customized
        * ALL SETTINGS ARE OPTIONAL - and there are more available than shown below
        *
        * These settings are set in 'sub-key format' - ALL data must be in a nested data-structures
        * All default settings (applied to all panes) go inside the defaults:{} key
        * Pane-specific settings go inside their keys: north:{}, south:{}, center:{}, etc
        */
        var layoutSettings_Outer = {
            name: "outerLayout" // NO FUNCTIONAL USE, but could be used by custom code to 'identify' a layout
            // options.defaults apply to ALL PANES - but overridden by pane-specific settings
	, defaults: {
	    size: "auto"
		, minSize: 50
		, paneClass: "pane" 		// default = 'ui-layout-pane'
		, resizerClass: "resizer"	// default = 'ui-layout-resizer'
		, togglerClass: "toggler"	// default = 'ui-layout-toggler'
		, buttonClass: "button"	// default = 'ui-layout-button'
		, contentSelector: ".content"	// inner div to auto-size so only it scrolls, not the entire pane!
		, contentIgnoreSelector: "span"		// 'paneSelector' for content to 'ignore' when measuring room for content
		, togglerLength_open: 35			// WIDTH of toggler on north/south edges - HEIGHT on east/west edges
		, togglerLength_closed: 35			// "100%" OR -1 = full height
		, hideTogglerOnSlide: true		// hide the toggler when pane is 'slid open'
		, togglerTip_open: "Close This Pane"
		, togglerTip_closed: "Open This Pane"
		, resizerTip: "Resize This Pane"
	    //	effect defaults - overridden on some panes
		, fxName: "slide"		// none, slide, drop, scale
		, fxSpeed_open: 750
		, fxSpeed_close: 1500
		, fxSettings_open: { easing: "easeInQuint" }
		, fxSettings_close: { easing: "easeOutQuint" }
	}
	, north: {
	    spacing_open: 1			// cosmetic spacing
		, togglerLength_open: 0			// HIDE the toggler button
		, togglerLength_closed: -1			// "100%" OR -1 = full width of pane
		, resizable: false
		, slidable: false
	    //	override default effect
		, fxName: "none"
	}
	, south: {
	    maxSize: 20
		, spacing_closed: 20			// HIDE resizer & toggler when 'closed'
		, slidable: false		// REFERENCE - cannot slide if spacing_closed = 0
		, initClosed: false
	}
	, west: {
	    size: 250
		, spacing_closed: 21			// wider space when closed
		, togglerLength_closed: 21			// make toggler 'square' - 21x21
		, togglerAlign_closed: "top"		// align to top of resizer
		, togglerLength_open: 0			// NONE - using custom togglers INSIDE west-pane
		, togglerTip_open: "Close West Pane"
		, togglerTip_closed: "Open West Pane"
		, resizerTip_open: "Resize West Pane"
		, slideTrigger_open: "click" 	// default
		, initClosed: false
	    //	add 'bounce' option to default 'slide' effect
		, fxSettings_open: { easing: "easeOutBounce" }
	}
	, east: {
	    size: 250
		//, spacing_closed: 21			// wider space when closed
		, spacing_closed: 0			// HIDE resizer & toggler when 'closed'
		, slidable: false
		, togglerLength_closed: 21			// make toggler 'square' - 21x21
		, togglerAlign_closed: "top"		// align to top of resizer
		, togglerLength_open: 0 			// NONE - using custom togglers INSIDE east-pane
		, togglerTip_open: "Close East Pane"
		, togglerTip_closed: "Open East Pane"
		, resizerTip_open: "Resize East Pane"
		, slideTrigger_open: "mouseover"
		, initClosed: true
	    //	override default effect, speed, and settings
		, fxName: "drop"
		, fxSpeed: "normal"
		, fxSettings: { easing: ""} // nullify default easing
	}
	, center: {
	    paneSelector: "#mainContent" 			// sample: use an ID to select pane instead of a class
		, onresize: "innerLayout.resizeAll"	// resize INNER LAYOUT when center pane resizes
		, minWidth: 200
		, minHeight: 200
	}
        };

    </script>
     <style type="text/css">
        .selected
        {
            background-color: #F6E46F;
            border: 1px blue solid;
        }
        </style>
    <asp:ContentPlaceHolder ID="head" runat="server">
    </asp:ContentPlaceHolder>
</head>
<body>
    <div id="mainContent">
        <div class="ui-layout-center">
         <%--   <h3 class="header">
                Inner - Center</h3>--%>
            <div class="ui-layout-content">
                <h2>
                    <%= Html.Encode(ViewData["CurrentItem"]) %></h2>
                <hr />
                <asp:ContentPlaceHolder ID="SampleContent" runat="server">
                </asp:ContentPlaceHolder>
            </div>
          <%--  <div class="footer">
                Center panes can have headers &amp; footers too</div>--%>
        </div>
    </div>
    <div class="ui-layout-north">
        <div class="header" style="text-align:right;">
            <div id="logindisplay">
				<% Html.RenderPartial("LogOnUserControl"); %>
			</div> 
            </div>
        <div class="content">
        <div class="sbheader">
            </div>
        </div>
        <%--<ul class="toolbar" style="display:none;">
            <li id="tbarToggleNorth" class="first"><span></span>Toggle NORTH</li>
            <li id="tbarOpenSouth"><span></span>Open SOUTH</li>
            <li id="tbarCloseSouth"><span></span>Close SOUTH</li>
            <li id="tbarPinWest"><span></span>Pin/Unpin WEST</li>
            <li id="tbarPinEast" class="last"><span></span>Pin/Unpin EAST</li>
        </ul>--%>
    </div>
    <div class="ui-layout-south">
        <div class="header">
           ©2011 YTech</div>
       <%-- <div class="content">
            <p>
                I only have a resizer/toggler when 'open'</p>
        </div>--%>
    </div>
    <div class="ui-layout-east">
        <div class="header">
            Outer - East</div>
        <div class="subhead">
            I'm a subheader</div>
        <div class="content">
        </div>
        <div class="footer">
            I'm a footer</div>
        <div class="footer">
            I'm another footer</div>
        <div class="footer">
            Unlimited headers &amp; footers</div>
    </div>
    <div class="ui-layout-west">
        <div class="header">
           Menu</div>
        <div class="content">
            <% Html.RenderPartial("Menu"); %>
        </div>
           <%-- <div class="footer"></div>--%>
    </div>
</body>
</html>
